I"4<p>Rocket.Chat dispone de tres imágenes oficiales, siendo la versión <em>stable</em> la que en principio 
vamos a utilizar.</p>

<p>Para bajarse alguna de las imagénes, vamos a ejecutar lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker pull rocket.chat
</code></pre></div></div>
<p><br />
Demo de la descarga:</p>

<p><img src="/assets/images/descarga-imagen.gif" width="480" height="259" frameborder="0" /></p>

<p>Una vez bajada dicha imagen, en caso de querer ejecutar Rocket.Chat sobre <em>systemd</em> vamos a seguir los
siguientes pasos:</p>

<ul>
  <li>Primero creamos una red en Docker:</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker network create rocketchat_default
</code></pre></div></div>

<ul>
  <li>
    <p>Después, creamos dos servicios: el primero será el servicio para Mongodb y el otro, el servicio de
Rocket.Chat.</p>

    <ul>
      <li>mongo.service</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  [Unit]
  Description=mongo
  Requires=docker.service
  After=docker.service
	
  [Service]
  EnvironmentFile=/etc/mongo				&lt;-- ficheros del servicio
  User=manuel
  Restart=always
  TimeoutStartSec=0
  ExecStartPre=-/usr/bin/docker kill mongo
  ExecStartPre=-/usr/bin/docker rm mongo
  ExecStartPre=-/usr/bin/docker pull mongo:3.2
	
	
  ExecStart=/usr/bin/docker run \
      --name mongo \
      -v /media/manuel/Datos1/PROYECTO/mongo:/data/db \		&lt;-- ruta del volumen para Mongodb
      --net=rocketchat_default \
      mongo:3.2 \
      mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
	
  ExecStop=-/usr/bin/docker kill mongo
  ExecStop=-/usr/bin/docker rm mongo
</code></pre></div>    </div>
    <p><br /></p>

    <ul>
      <li>rocketchat.service</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  [Unit]
  Description=rocketchat
  Requires=docker.service
  Requires=mongo.service
  After=docker.service
  After=mongo.service
	
  [Service]
  EnvironmentFile=/etc/rocketchat				&lt;-- ficheros del servicio
  User=manuel						
  Restart=always
  TimeoutStartSec=0
  ExecStartPre=-/usr/bin/docker kill rocketchat
  ExecStartPre=-/usr/bin/docker rm rocketchat
  ExecStartPre=-/usr/bin/docker pull rocketchat/rocket.chat:latest
	
  ExecStart=/usr/bin/docker run \
      --name rocketchat \
      -v /media/manuel/Datos1/PROYECTO/rocketchat:/app/uploads \	&lt;-- donde subir ficheros
      -e MONGO_OPLOG_URL=mongodb://mongo:27017/local \
      -e MONGO_URL=mongodb://mongo:27017/rocketchat \
      -e ROOT_URL=https://sub.domain.xx \
      --link mongo:mongo \
      --net=rocketchat_default \
      --expose 3000 \
      rocketchat/rocket.chat:latest
	
  ExecStop=-/usr/bin/docker kill rocketchat
  ExecStop=-/usr/bin/docker rm rocketchat
</code></pre></div>    </div>
    <p><br /></p>
  </li>
  <li>
    <p>Creados ambos servicios, vamos a iniciar el de Mongodb y creamos el siguiente contenedor Docker:</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run \
      --name mongo-init-replica \
      --link mongo:mongo \
      --rm \
      --net=rocketchat_default \
      mongo:3.2 \
      mongo mongo/rocketchat --eval "rs.initiate({ _id: 'rs0', members: [ { _id: 0, host: 'localhost:27017' } ]})"
</code></pre></div></div>
<p><br />
<img src="/assets/images/contenedor-mongo.gif" width="480" height="259" frameborder="0" />
<br /></p>

<ul>
  <li>Por último, vamos a iniciar el servicio de Rocket.Chat creado anteriormente:</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo systemctl start rocketchat.service
</code></pre></div></div>
<p><br /></p>

<p>Con esto, ya tendriamos nuestro servicio Rocket.Chat funcionando en una máquina Docker, pero funcionando
desde systemd.</p>

<p>Como última aclaración, en caso de tener un proxy inverso, nos debemos asegurar que está añadido
en la red creada anteriormente. Para ello, debemos añadir la siguiente línea en el archivo
<em>rocketchat.service</em>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ExecStartPre=-/usr/bin/docker network connect rocketchat_default Nginx
</code></pre></div></div>

<p>Ahora pasaremos a otro tipo de instalación.</p>

<div>

 <span style="margin-right:980px;text-align:left;color:blue" onclick="document.location.href = 'introduction-post'; return false">&lt; Introducción</span>

 <span style="margin-left:980px;text-align:right;color:blue" onclick="document.location.href = 'dockercompose-post'; return false">Instalación Docker-compose &gt;</span>

</div>
:ET